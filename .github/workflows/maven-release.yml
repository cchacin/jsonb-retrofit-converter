name: Maven Release

on:
  push:
    tags:
      - 'v**'

jobs:
  build:
    name: "Maven Release"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout Sources"
        uses: actions/checkout@v2
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2
      - name: "Set up JDK"
        uses: actions/setup-java@v1.4.2
        with:
          java-version: 15
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: "Cache Maven dependencies"
        uses: actions/cache@v2
        env:
          cache-name: cache-maven-dependencies
        with:
          # maven dependencies are stored in `~/.m2/repository` on Linux/macOS
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Configure Git User"
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: "Build with Maven"
        run: export GPG_TTY=`tty` && ./mvnw verify deploy -Prelease -s settings.xml
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
